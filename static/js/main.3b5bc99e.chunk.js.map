{"version":3,"sources":["components/useInput.js","components/BasicForm.js","App.js","index.js"],"names":["defaultInput","value","isTouched","inputReducer","prevState","action","type","useInput","validateState","useReducer","inputState","dispatchEmail","valueIsValid","hasError","isValid","valueChangeHandler","event","target","inputBlurHandler","isEmpty","trim","isEmail","includes","BasicForm","props","enteredName","enteredNameIsValid","nameInputHasError","nameChangeHandler","nameBlurHandler","enteredSurname","surnameInputHasError","surnameChangeHandler","surnameBlurHandler","enteredEmail","emailInputHasError","emailChangeHandler","emailBlurHandler","formIsValid","nameClasses","surnameClasses","emailClasses","onSubmit","preventDefault","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"mLAGMA,EAAe,CACjBC,MAAO,GACPC,WAAW,GAGTC,EAAe,SAAfA,EAAgBC,EAAWC,GAC7B,MAAoB,UAAhBA,EAAOC,KACA,CACHL,MAAOI,EAAOJ,MACdC,UAAWE,EAAUF,WAGT,SAAhBG,EAAOC,KACA,CACHL,MAAOG,EAAUH,MACjBC,WAAW,GAGZC,GAGEI,EAAW,SAACC,GACrB,MAAoCC,qBAAWN,EAAcH,GAA7D,mBAAOU,EAAP,KAAmBC,EAAnB,KAKIC,EAAeJ,EAAcE,EAAWT,OACxCY,GAAYD,GAAgBF,EAAWR,UAY7C,MAAO,CACHD,MAAOS,EAAWT,MAClBa,QAASF,EACTC,WACAE,mBAduB,SAACC,GACxBL,EAAc,CAACL,KAAM,QAASL,MAAOe,EAAMC,OAAOhB,SAclDiB,iBAVqB,SAACF,GACtBL,EAAc,CAACL,KAAM,Y,OCpCrBa,EAAU,SAAClB,GAAD,MAA4B,KAAjBA,EAAMmB,QAC3BC,EAAU,SAACpB,GAAD,OAAWA,EAAMqB,SAAS,MA0E3BC,EAxEG,SAACC,GACjB,MAMIjB,EAASY,GALJM,EADT,EACExB,MACSyB,EAFX,EAEEZ,QACUa,EAHZ,EAGEd,SACoBe,EAJtB,EAIEb,mBACkBc,EALpB,EAKEX,iBAGF,EAMIX,EAASY,GALJW,EADT,EACE7B,MAEU8B,GAHZ,EAEEjB,QAFF,EAGED,UACoBmB,EAJtB,EAIEjB,mBACkBkB,EALpB,EAKEf,iBAGF,EAMIX,EAASc,GALJa,EADT,EACEjC,MAEUkC,GAHZ,EAEErB,QAFF,EAGED,UACoBuB,EAJtB,EAIErB,mBACkBsB,EALpB,EAKEnB,iBAGEoB,GAAc,EAEfZ,IACDY,GAAc,GAGhB,IAQMC,EAAcZ,EAAoB,uBAAyB,eAC3Da,EAAiBT,EAAuB,uBAAyB,eACjEU,EAAeN,EAAqB,uBAAyB,eAEnE,OACE,uBAAMO,SAbc,SAAA1B,GACpBA,EAAM2B,kBAYN,UACE,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAf,wBACA,uBAAOvC,KAAK,OAAOwC,GAAG,OAAO7C,MAAOwB,EAAasB,SAAUnB,EAAmBoB,OAAQnB,IACrFF,GAAqB,wDAGxB,sBAAKiB,UAAWJ,EAAhB,UACE,uBAAOK,QAAQ,OAAf,uBACA,uBAAOvC,KAAK,OAAOwC,GAAG,OAAO7C,MAAO6B,EAAgBiB,SAAUf,EAAsBgB,OAAQf,IAC3FF,GAAwB,8DAI7B,sBAAKa,UAAWH,EAAhB,UACE,uBAAOI,QAAQ,OAAf,4BACA,uBAAOvC,KAAK,OAAOwC,GAAG,OAAO7C,MAAOiC,EAAca,SAAUX,EAAoBY,OAAQX,IACvFF,GAAsB,yDAGzB,qBAAKS,UAAU,eAAf,SACE,wBAAQK,UAAWX,EAAnB,0BC3DOY,MATf,WACE,OACE,qBAAKN,UAAU,MAAf,SAEE,cAAC,EAAD,OCHNO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.3b5bc99e.chunk.js","sourcesContent":["// import { useState } from \"react\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultInput = {\r\n    value: '',\r\n    isTouched: false\r\n}\r\n\r\nconst inputReducer = (prevState, action) => {\r\n    if (action.type === 'INPUT') {\r\n        return {\r\n            value: action.value,\r\n            isTouched: prevState.isTouched\r\n        }\r\n    }\r\n    if (action.type === 'BLUR') {\r\n        return {\r\n            value: prevState.value,\r\n            isTouched: true\r\n        }\r\n    }\r\n    return inputReducer\r\n}\r\n\r\nexport const useInput = (validateState) => {\r\n    const [inputState, dispatchEmail] = useReducer(inputReducer, defaultInput)\r\n\r\n//   const [enteredValue, setEnteredValue] = useState(\"\");\r\n//   const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateState(inputState.value) // true || false\r\n  const hasError = !valueIsValid && inputState.isTouched \r\n\r\n  const valueChangeHandler = (event) => {\r\n      dispatchEmail({type: 'INPUT', value: event.target.value})\r\n    //   setEnteredValue(event.target.value)\r\n  }\r\n\r\n  const inputBlurHandler = (event) => {\r\n      dispatchEmail({type: 'BLUR'})\r\n    //   setIsTouched(true)\r\n  }\r\n\r\n  return {\r\n      value: inputState.value,\r\n      isValid: valueIsValid,\r\n      hasError,\r\n      valueChangeHandler,\r\n      inputBlurHandler,\r\n  }\r\n\r\n};","import { useInput } from \"./useInput\";\n\n\nconst isEmpty = (value) => value.trim() !== ''\nconst isEmail = (value) => value.includes('@')\n\nconst BasicForm = (props) => {\n  const  {\n    value: enteredName, \n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(isEmpty)\n\n  const  {\n    value: enteredSurname, \n    isValid: enteredSurnameIsValid,\n    hasError: surnameInputHasError,\n    valueChangeHandler: surnameChangeHandler,\n    inputBlurHandler: surnameBlurHandler\n  } = useInput(isEmpty)\n\n  const  {\n    value: enteredEmail, \n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler\n  } = useInput(isEmail)\n\n  let formIsValid = false\n\n  if(enteredNameIsValid) {\n    formIsValid = true\n  }\n\n  const submitHandler = event => {\n    event.preventDefault()\n\n    if (!enteredNameIsValid) {\n      return\n    }\n  }\n\n  const nameClasses = nameInputHasError ? 'form-control invalid' : 'form-control'\n  const surnameClasses = surnameInputHasError ? 'form-control invalid' : 'form-control'\n  const emailClasses = emailInputHasError ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={nameClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' value={enteredName} onChange={nameChangeHandler} onBlur={nameBlurHandler}/>\n          {nameInputHasError && <p>Please enter ur name</p>}\n        </div>\n        \n        <div className={surnameClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' value={enteredSurname} onChange={surnameChangeHandler} onBlur={surnameBlurHandler} />\n          {surnameInputHasError && <p>Please enter ur surname</p>}\n        </div>\n      </div>\n\n      <div className={emailClasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' value={enteredEmail} onChange={emailChangeHandler} onBlur={emailBlurHandler} />\n        {emailInputHasError && <p>Please enter ur email</p>}\n      </div>\n\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","// import SimpleInput from './components/SimpleInput';\n\nimport BasicForm from \"./components/BasicForm\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* <SimpleInput /> */}\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}